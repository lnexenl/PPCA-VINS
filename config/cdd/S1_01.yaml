%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam;
imu: 0
num_of_cam: 2
groundtruth: 1

gt_odom: "/airsim_node/uav/odom_local_ned"
imu_topic: "/airsim_node/uav/imu/imu"
image0_topic: "/airsim_node/uav/left/Scene"
image1_topic: "/airsim_node/uav/right/Scene"
output_path: "/home/lnex/work/new_dataset/S1_01/small"

cam0_calib: "cam_450p.yaml"
cam1_calib: "cam_450p.yaml"
image_width: 800
image_height: 450
baseline_length: 1.0


# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
# 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
  rows: 4
  cols: 4
  dt: d
  data: [ 0.0, 0.0, 1.0, 0.5,
          1.0, 0.0, 0.0, -0.5,
          0.0, 1.0, 0.0, 0.0,
          0.0, 0.0, 0.0, 1.0 ]

body_T_cam1: !!opencv-matrix
  rows: 4
  cols: 4
  dt: d
  data: [ 0.0, 0.0, 1.0, 0.5,
          1.0, 0.0, 0.0, 0.5,
          0.0, 1.0, 0.0, 0.0,
          0.0, 0.0, 0.0, 1.0 ]

#Stereo depth parameters
prior_locate:
  fitness_threshold: 1.0
  reg_trans_threshold: 4.0
  var_factor: 20000
  max_depth: 50
  validate_frames: 4
  depth_threshold: 0.5
  pointcloud: "/home/lnex/dataset/origin/4x.pcd"
  clip_range:
    x: 5
    y: 5
    z: 5
  voxel_grid_size: 0.4

  #translation in XYZ(meters)
  init_tran: !!opencv-matrix
    rows: 1
    cols: 3
    dt: f
    data: [ 0, 0, 3.8 ]
  #quaternion in wxyz
  init_quat: !!opencv-matrix
    rows: 1
    cols: 4
    dt: f
    data: [ 0.997, 0, 0.0, 0.066 ]



#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 15            # min distance between two features
freq: 0                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.06  # max solver itration time (ms), to guarantee real time
max_num_iterations: 12   # max solver itrations, to guarantee real time
keyframe_parallax: 30.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.1          # accelerometer measurement noise standard deviation.
gyr_n: 0.01         # gyroscope measurement noise standard deviation.
acc_w: 0.001        # accelerometer bias random work noise standard deviation.
gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.
g_norm: 9.81007     # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0
