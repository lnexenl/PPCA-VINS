%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam;
imu: 1
num_of_cam: 2

imu_topic: "/imu0"
image0_topic: "/cam0/image_rect"
image1_topic: "/cam1/image_rect"
output_path: "/home/lnex/vins_out"

cam0_calib: "cam_pinhole.yaml"
cam1_calib: "cam_pinhole.yaml"
image_width: 752
image_height: 480
baseline_length: 0.11008


# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
# 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

#body_T_cam0: !!opencv-matrix
#  rows: 4
#  cols: 4
#  dt: d
#  data: [ 0.0148655429818, -0.999880929698, 0.00414029679422, -0.0216401454975,
#          0.999557249008, 0.0149672133247, 0.025715529948,  -0.064676986768,
#          -0.0257744366974, 0.00375618835797, 0.999660727178, 0.00981073058949,
#          0, 0, 0, 1 ]
#
#body_T_cam1: !!opencv-matrix
#  rows: 4
#  cols: 4
#  dt: d
#  data: [ 0.0125552670891, -0.999755099723, 0.0182237714554, -0.0198435579556,
#          0.999598781151, 0.0130119051815, 0.0251588363115, 0.0453689425024,
#          -0.0253898008918, 0.0179005838253, 0.999517347078, 0.00786212447038,
#          0, 0, 0, 1 ]

# raw image rectified, extrinsics recalibered by setting estimate_extrinsic to 1.
body_T_cam0: !!opencv-matrix
  rows: 4
  cols: 4
  dt: d
  data: [ 1.6516780512887186e-02, -9.9981732318308802e-01, 9.6185354651440926e-03, -1.2467881303483140e-02,
          9.9974472954455618e-01, 1.6662378530112210e-02,  1.5259124798032637e-02, -6.2355016995474848e-02,
          -1.5416604988511209e-02, 9.3640485221073381e-03, 9.9983730820864247e-01, 4.9900614343332324e-04,
          0., 0., 0., 1. ]

body_T_cam1: !!opencv-matrix
  rows: 4
  cols: 4
  dt: d
  data: [ 1.6610313717779213e-02, -9.9981852451292497e-01, 9.3282109214344877e-03, -1.0470377372848696e-02,
          9.9974105577156824e-01, 1.6752709687357203e-02, 1.5400263727654625e-02, 4.7123863768713553e-02,
          -1.5553741766762790e-02, 9.0699922232019073e-03, 9.9983789504005294e-01, -1.0455694556828691e-03,
          0., 0., 0., 1. ]

#Stereo depth parameters
prior_locate:
  depth_threshold: 0.2
  pointcloud: "/home/lnex/pcd/V1_01_easy.pcd"

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.1          # accelerometer measurement noise standard deviation.
gyr_n: 0.01         # gyroscope measurement noise standard deviation.
acc_w: 0.001        # accelerometer bias random work noise standard deviation.
gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.
g_norm: 9.81007     # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0
